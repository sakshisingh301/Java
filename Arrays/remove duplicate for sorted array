idea is to make a temp array and keep iterating through the original array and if ith and i+1 th are not equal transfer it to temp array :




using extra memory:
time complexity: 0(n)

import java.util.*;
public class Main
{
	public static void main(String[] args) {
		int [] a={1,2,2,3};
	    int n=a.length;
	    int [] temp=new int[n];
	    int i=0;
	    for(int j=0;j<n-1;j++)
	    {
	        if(a[j]!=a[j+1])
	        {
	            temp[i]=a[j];
	            i++;
	        }
	    }
	    temp[i]=a[n-1];
	    for(int x: temp)
	    {
	        System.out.println(x);
	    }
	}
}




leetcode solution :

class Solution {
    public int removeDuplicates(int[] nums) {
         int i = 0;
	    
	    for(int j = 1 ; j < nums.length ; j++)
	    {
	        if(nums[i] != nums[j])
	        {   
	              i++;
	            nums[i] = nums[j];
	          
	        }
	    }
	    return i+1;
        
        
    }
}
