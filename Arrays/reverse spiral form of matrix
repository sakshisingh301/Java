

class Solution {
    public List<Integer> spiralOrder(int[][] matrix) {
         ArrayList<Integer> list=new ArrayList<>();
        if(matrix.length==0 )
            return list;
        
       
        
        int R=matrix.length;
        int C=matrix[0].length;
         
        int last_row=R-1;
        int last_column=C-1;
        
        int k=0;
        int l=0;
        
        while(k<=last_row && l<=last_column)
        {
            
        
        for(int i=k;i<=last_column;i++)
        {
            list.add(matrix[k][i]);
        }
        k++;
        
        for(int i=k;i<=last_row;i++)
        {
            list.add(matrix[i][last_column]);
        }
        last_column--;
        
         if(k<=last_row)
         { 
        
        for(int i=last_column;i>=l;i--)
        {
            list.add(matrix[last_row][i]);
        }
        last_row--;
        }
            
         if(l<=last_column)
        {
        for(int i=last_row;i>=k;i--)
        {
            list.add(matrix[i][l]);
        }
        l++;
             
         }
        }
        Collections.reverse(list);
        return list;
    }
}
