
import java.util.*;
public class Main
{
	public static void main(String[] args) {
	int [] a={1,4,20,3,10,5};
	int sum=33;
	int left=0;
	int right=0;
	int max=0;
	int sum1=0;
	for(int i=0;i<a.length;i++)
	{
	  max=max+a[i];
	  if(max>sum1)
	  {
	      sum1=max;
	  }
	  if(sum1<sum)
	  {
	      right++;
	  }
	  else{
	      left++;
	  }
	}
	System.out.println(left);
	System.out.println(right);
	}
}

=====================================================================================================================================

naive solution 
time complexity:0(n2)
space complexity:0(n)



import java.util.*;
public class Main
{
	public static void main(String[] args) {
	int [] a={1,4,20,3,10,5};
	int sum=33;
	HashMap<Integer,Integer> map=new HashMap<>();
	for(int i=0;i<a.length;i++)
	{
	    map.put(a[i],i);
	}
	for(int i=0;i<a.length;i++)
	{
	    for(int j=i+1;j<a.length;j++)
	    {
	        int diff=sum-(a[i]+a[j]);
	        if(map.containsKey(diff)&& map.get(diff)!=i &&map.get(diff)!=j)
	        {
	            if(i<map.get(diff))
	            {
	        System.out.println("index1: "+i);
	        System.out.println("index2: " +map.get(diff));
	        break;
	            }
	        }
	    }
	}
	}
}

