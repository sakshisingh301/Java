/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<List<Integer>> levelOrderBottom(TreeNode root) {
        List<List<Integer>> list = new ArrayList<List<Integer>>();
          if(root==null)
            return list;
        
        Queue<TreeNode> q=new LinkedList<>();
        Stack<Integer> s=new Stack<>();
        
        q.add(root);
        
        while(!q.isEmpty())
        {
            int size = q.size();
            ArrayList<Integer> temp = new ArrayList<>();
            
            for(int i = 0 ; i < size ; i++)
            {
                root = q.poll();
                
                s.push(root.val);
                temp.add(s.pop());
                
                if(root.left != null)
                {
                    q.add(root.left);
                }
                if(root.right != null)
                {
                    q.add(root.right);
                }
            } 
            list.add(temp);
        }
        Collections.reverse(list);
       
        return list;
    }
}
