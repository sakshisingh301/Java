

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public int widthOfBinaryTree(TreeNode root) {
        if(root==null)
            return 0;
      
       Queue<TreeNode> q=new LinkedList<>();
        q.add(root);
        int maxwidth=1;
        
        while(!q.isEmpty())
        {
            int size=q.size();
            if(size>maxwidth)
            {
                maxwidth=size;
            }
            if(size==0)
            {
                break;
            }
            TreeNode p=q.remove();
            if(p.left!=null)
                q.add(p.left);
            if(p.right!=null)
                q.add(p.right);
            //if(p.left!=null &&p.right==null ||p.left==null &&p.right!=null)
               // if(size<maxwidth)
                    //maxwidth++;
            
            size--;
            
            
        }
        return maxwidth;
        
    }
}
