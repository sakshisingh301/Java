class Solution {
    public List<List<Integer>> zigzagLevelOrder(TreeNode root) {
         List<List<Integer>> list = new ArrayList<List<Integer>>();
        Queue<TreeNode> queue = new LinkedList<>();
        if(root==null)
            return list;
        Stack<TreeNode> s1=new Stack<>();
        Stack<TreeNode> s2=new Stack<>();
        s1.add(root);
        while(!s1.isEmpty()|| !s2.isEmpty())
        {
            List<Integer> arraylist=new ArrayList<>();
        if(!s1.isEmpty())
        {
            
            while(!s1.isEmpty())
            {
                
              TreeNode p=  s1.pop();
                arraylist.add(p.val);
                if(p.left!=null)
                {
                    s2.push(p.left);
                }
                if(p.right!=null)
                {
                    s2.push(p.right);
                }
            }
        }   
            else
            {
                
            while(!s2.isEmpty())
            {
              TreeNode p=  s2.pop();
                arraylist.add(p.val);
                if(p.right!=null)
                {
                    s1.push(p.right);
                }
                if(p.left!=null)
                {
                    
                    s1.push(p.left);
                }
            }
            }
         list.add(arraylist);    
        }
        return list;
       
        
    }
}
