time complexity: o(N)

input:a={1,3,2,4};
for 1:
no element found at the left side of 1 hence add -1
for 3:
no element greater than 3 found at the left side of 3 hence add -1
for 2:
3 is greater than 2 and it is closest hence add 3 to the list;
for 4:
no element found at the left side of 4 which is greater than 4 hence add -1


output: {-1,-1,3,-1}


import java.util.*;
public class Main
{
	public static void main(String[] args)
	{
	    int [] a={1,3,2,4};
	    Stack<Integer> s=new Stack<>();
	    ArrayList<Integer> list=new ArrayList<>();
	    
	    
	for(int i=0;i<a.length;i++)
	{
	  if(s.size()==0)
	  {
	      list.add(-1);
	  }
	   else if(s.size()>0 &&s.peek()<a[i])
	  {
	      while(s.size()>0 &&s.peek()<a[i])
	      {
	          s.pop();
	      }
	      if(s.size()==0)
	      {
	          list.add(-1);
	      }
	      else
	      {
	          list.add(s.peek());
	      }
	  }  
	    else if(s.size()>0 && s.peek()>a[i])
	    {
	        list.add(s.peek());
	    }
	      
	      
	  s.push(a[i]);
	}
	System.out.println(list);
	}
}
