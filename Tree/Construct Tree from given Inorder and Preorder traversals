
import java.util.*;
public class Main
{
    static class Node 
    {
        int data;
        Node right;
        Node left;
        Node(int data)
        {
            this.data=data;
            left=null;
            right=null;
        }
    }
    int index=0;
     Node buildTree(int []preorder,int [] inorder)
    {
        HashMap<Integer,Integer> hashmap=new HashMap<>();
        int i_start=0;
        int i_end=inorder.length;
        for(int i=i_start;i<i_end;i++)
        {
            hashmap.put(inorder[i],i);
        }
        return helper(i_start,i_end,hashmap,inorder,preorder);
    }
    
     Node helper(int i_start,int i_end,HashMap<Integer,Integer> hashmap,int []inorder,int []preorder)
    {
        if(i_start>=i_end)
        return null;
        Node root=new Node(preorder[index++]);
        int pos=hashmap.get(root.data);
        root.left=helper(i_start,pos,hashmap,inorder,preorder);
        root.right=helper(pos+1,i_end,hashmap,inorder,preorder);
        return root;
        
    }
    void print(Node root)
    {
        if(root==null)
        return;
        print(root.left);
        System.out.println(root.data);
        print(root.right);
    }
	public static void main(String[] args) {
    int [] preorder = {3,9,20,15,7};
    int [] inorder = {9,3,15,20,7};
    Main obj=new Main();
  
    Node root=obj.buildTree(preorder,inorder);
    obj.print(root);
  
		
	}
}
