//using level order transversal
import java.util.Queue;
import java.util.LinkedList;
public class Main
{
    static class Node
    {
        int data;
        Node left;
        Node right;
        Node(int data)
        {
            this.data=data;
            left=null;
            right=null;
        }
    }
    public void LeftViewOfTheTree(Node root)
    {
        if(root==null)
        
        return ;
        
        
        Queue<Node> queue=new LinkedList<>();
        queue.add(root);
       
        while(!queue.isEmpty())
        {
        Node p=queue.poll();
            
            if(p.left!=null)    
            queue.add(p.left);
             
            System.out.println(p.data);
            
        }  
    }
    
    public void print(Node root)
    {
        if(root!=null)
        {
            print(root.left);
            System.out.println(root.data);
            print(root.right);
        }
    }
    
	public static void main(String[] args) {
	    Main obj=new Main();
	    Node root=new Node(1);
	    root.left=new Node(2);
	    root.right=new Node(3);
	    root.left.left=new Node(4);
	    root.left.right=new Node(5);
	   
	   obj.LeftViewOfTheTree(root);
	
	}
}
