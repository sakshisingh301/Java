


/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public boolean isValidBST(TreeNode root) {
        
        ArrayList<Integer> list=new ArrayList<>();
        
        Stack<TreeNode> stack=new Stack<>();
        
        TreeNode curr=root;
        
        while(stack.size()>0 || curr!=null)
        {
            while(curr!=null)
            {
                stack.push(curr);
                curr=curr.left;
            }
            curr=stack.peek();
            list.add(curr.val);
            stack.pop();
            curr=curr.right;
            
        }
       boolean status=true;
        
        for(int i=0;i<list.size()-1;i++)
        {
            if(list.get(i)>=list.get(i+1))
            {
                status=false;
                break;
            }
        }
        return status;
        
    }
}
