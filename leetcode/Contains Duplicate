
o(n): time complexity
o(n): space complexity 
class Solution {
    public boolean containsDuplicate(int[] nums) {
        Set<Integer> obj=new HashSet<>();
            for(int x: nums)
            {
                if(obj.contains(x))
                    return true;
                else
                    obj.add(x);
            }
        return false;
    }
}

time complexity: nlogn
space complexity: o(1)



class Solution {
    public boolean containsDuplicate(int[] nums) {
        Arrays.sort(nums);
        for(int i=0;i<nums.length-1;i++)
        {
            if(nums[i]==nums[i+1])
                return true;
        }
        return false;
        
    }
}
