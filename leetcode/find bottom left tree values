/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public int findBottomLeftValue(TreeNode root) {
        if(root==null)
            return 0;
        int level=1;
        
        Queue<TreeNode> q=new LinkedList<>();
        q.add(root);
        int result=0;
        while(!q.isEmpty())
        {
            int size=q.size();
            level++;
            
            for(int i=0;i<size;i++)
            {
                
            TreeNode p=q.remove();
            if(i==0 && p.left==null&&p.left==null)
            {
              result=p.val;   
            }
                
            if(p.left!=null)
                q.add(p.left);
            if(p.right!=null)
                q.add(p.right);
            }
        }
      return result; 
    }
}
