/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public boolean isSymmetric(TreeNode root) {
        if(root==null)
            return true;
        Stack<TreeNode> s=new Stack<>();
        s.push(root.left);
        s.push(root.right);
        while(!s.isEmpty())
        {
          TreeNode t1=s.pop();
            TreeNode t2=s.pop();
            if(t1==null && t2==null)
                continue;
            if(t1==null||t2==null||t1.val!=t2.val)
                return false;
                
                s.push(t1.left);
                s.push(t2.right);
                s.push(t1.right);
                s.push(t2.left);
                
        }
        return true;
    }
}
