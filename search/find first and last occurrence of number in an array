Input : arr[] = {1, 3, 5, 5, 5, 5, 67, 123, 125}    
        x = 5
Output : First Occurrence = 2
         Last Occurrence = 5




last occurence :

import java.util.*;
public class Main
{
	public static void main(String[] args) {
	int [] a={1,3,5,5,5,5,67,123,125};
	int x=5;
	int start=0;
	int end=a.length-1;
    int res=-1;
	while(start<=end)
	{
	    int mid=(start+end)/2;
	    if(a[mid]==x)
	    {
	       res=mid;
	       start=mid+1;
	    }
	    else if(x>a[mid])
	    {
	        start=mid+1;
	    }
	    else{
	        end=mid-1;
	    }
	}
	System.out.println("last occurance : "+res);

	}
}
=================================================================================================================================================================

finding first occurence 


import java.util.*;
public class Main
{
	public static void main(String[] args) {
	int [] a={1,3,5,5,5,5,67,123,125};
	int x=5;
	int start=0;
	int end=a.length-1;
    int res=-1;
	while(start<=end)
	{
	    int mid=(start+end)/2;
	    if(a[mid]==x)
	    {
	       res=mid;
	       end=mid-1;
	    }
	    else if(x>a[mid])
	    {
	        start=mid+1;
	    }
	    else{
	        end=mid-1;
	    }
	}
	System.out.println("first  occurance : "+res);

	}
}
=======================================================================================================================================================================


class Solution {
    public int[] searchRange(int[] nums, int target) {
        ArrayList<Integer> list=new ArrayList<>();
        int i=0;
        int start=0;
        int end=nums.length-1;
        int temp1=-1;
        while(start<=end)
        {
            int mid=start+(end-start)/2;
            if(nums[mid]==target)
            {
                temp1=mid;
                end=mid-1;
            }
            else if(target>nums[mid])
            {
                start=mid+1;
                
            }
            else
            {
                end=mid-1;
            }
            
        }
        list.add(temp1);
        
          start=0;
         end=nums.length-1;
        int temp2=-1;
        while(start<=end)
        {
            int mid=start+(end-start)/2;
            if(nums[mid]==target)
            {
                temp2=mid;
                start=mid+1;
            }
            else if(target>nums[mid])
            {
                start=mid+1;
                
            }
            else
            {
                end=mid-1;
            }
            
        }
       
       list.add(temp2); 
        int [] a=new int[list.size()];
        
        for(int k=0;k<list.size();k++)
        {
            a[k]=list.get(k);
        }
        return a;
    }
}
